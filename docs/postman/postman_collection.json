{
  "info": {
    "name": "Inventory System API",
    "description": "Multi-Tenant Inventory System API con arquitectura DDD y Hexagonal",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "organizationId",
      "value": "dev-org",
      "type": "string"
    },
    {
      "key": "userAgent",
      "value": "PostmanRuntime/7.32.3",
      "type": "string"
    },
    {
      "key": "requestId",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "sessionId",
      "value": "",
      "type": "string"
    },
    {
      "key": "accessTokenExpiresAt",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshTokenExpiresAt",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "description": "Endpoints para autenticaci√≥n y autorizaci√≥n de usuarios",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Organization-ID",
                "value": "{{organizationId}}",
                "type": "text"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Autenticar usuario con email y contrase√±a, retorna tokens JWT"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Script espec√≠fico para el endpoint de login",
                  "// Extraer autom√°ticamente los tokens de la respuesta",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});",
                  "",
                  "pm.test('Response has required fields', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('accessToken');",
                  "    pm.expect(responseJson).to.have.property('refreshToken');",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});",
                  "",
                  "// Extraer y guardar tokens autom√°ticamente",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    ",
                  "    // Guardar access token",
                  "    if (responseJson.accessToken) {",
                  "        pm.collectionVariables.set('accessToken', responseJson.accessToken);",
                  "        console.log('Access token guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    // Guardar refresh token",
                  "    if (responseJson.refreshToken) {",
                  "        pm.collectionVariables.set('refreshToken', responseJson.refreshToken);",
                  "        console.log('Refresh token guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    // Guardar informaci√≥n adicional √∫til",
                  "    if (responseJson.user && responseJson.user.id) {",
                  "        pm.collectionVariables.set('userId', responseJson.user.id);",
                  "        console.log('User ID guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    if (responseJson.sessionId) {",
                  "        pm.collectionVariables.set('sessionId', responseJson.sessionId);",
                  "        console.log('Session ID guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    // Guardar fechas de expiraci√≥n",
                  "    if (responseJson.accessTokenExpiresAt) {",
                  "        pm.collectionVariables.set('accessTokenExpiresAt', responseJson.accessTokenExpiresAt);",
                  "        console.log('Access token expiration guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    if (responseJson.refreshTokenExpiresAt) {",
                  "        pm.collectionVariables.set('refreshTokenExpiresAt', responseJson.refreshTokenExpiresAt);",
                  "        console.log('Refresh token expiration guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    console.log('‚úÖ Login exitoso - Tokens configurados autom√°ticamente');",
                  "    console.log('üîë Access Token:', responseJson.accessToken ? 'Configurado' : 'No disponible');",
                  "    console.log('üîÑ Refresh Token:', responseJson.refreshToken ? 'Configurado' : 'No disponible');",
                  "}"
                ]
              }
            }
          ],
          "response": [
            {
              "name": "Login Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"user\": {\n    \"id\": \"user-id\",\n    \"email\": \"user@example.com\",\n    \"username\": \"username\",\n    \"name\": \"User Name\",\n    \"roles\": [\"USER\"],\n    \"permissions\": [\"READ\"]\n  },\n  \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"accessTokenExpiresAt\": \"2024-12-31T23:59:59.000Z\",\n  \"refreshTokenExpiresAt\": \"2025-01-31T23:59:59.000Z\",\n  \"sessionId\": \"session-id\"\n}"
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accessToken\": \"{{accessToken}}\",\n  \"reason\": \"USER_REQUEST\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Cerrar sesi√≥n del usuario y blacklistear tokens JWT"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Script espec√≠fico para el endpoint de logout",
                  "// Limpiar tokens y variables de sesi√≥n",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});",
                  "",
                  "pm.test('Response indicates successful logout', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('success');",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});",
                  "",
                  "// Limpiar tokens y variables de sesi√≥n autom√°ticamente",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    ",
                  "    if (responseJson.success) {",
                  "        // Limpiar tokens",
                  "        pm.collectionVariables.unset('accessToken');",
                  "        pm.collectionVariables.unset('refreshToken');",
                  "        ",
                  "        // Limpiar informaci√≥n de sesi√≥n",
                  "        pm.collectionVariables.unset('sessionId');",
                  "        pm.collectionVariables.unset('userId');",
                  "        ",
                  "        // Limpiar fechas de expiraci√≥n",
                  "        pm.collectionVariables.unset('accessTokenExpiresAt');",
                  "        pm.collectionVariables.unset('refreshTokenExpiresAt');",
                  "        ",
                  "        console.log('üóëÔ∏è Logout exitoso - Tokens y variables de sesi√≥n limpiados autom√°ticamente');",
                  "        console.log('üîí Tokens blacklisteados:', responseJson.blacklistedTokens || 0);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "response": [
            {
              "name": "Logout Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"accessToken\": \"{{accessToken}}\",\n  \"reason\": \"USER_REQUEST\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "logout"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Logout successful\",\n  \"blacklistedTokens\": 1\n}"
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refrescar token de acceso usando un refresh token v√°lido"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Script espec√≠fico para el endpoint de refresh token",
                  "// Extraer autom√°ticamente los nuevos tokens de la respuesta",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});",
                  "",
                  "pm.test('Response has required fields', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('accessToken');",
                  "    pm.expect(responseJson).to.have.property('refreshToken');",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});",
                  "",
                  "// Extraer y guardar nuevos tokens autom√°ticamente",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    ",
                  "    // Guardar nuevo access token",
                  "    if (responseJson.accessToken) {",
                  "        pm.collectionVariables.set('accessToken', responseJson.accessToken);",
                  "        console.log('Nuevo access token guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    // Guardar nuevo refresh token",
                  "    if (responseJson.refreshToken) {",
                  "        pm.collectionVariables.set('refreshToken', responseJson.refreshToken);",
                  "        console.log('Nuevo refresh token guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    // Actualizar informaci√≥n del usuario si cambi√≥",
                  "    if (responseJson.user && responseJson.user.id) {",
                  "        pm.collectionVariables.set('userId', responseJson.user.id);",
                  "        console.log('User ID actualizado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    // Guardar fechas de expiraci√≥n",
                  "    if (responseJson.accessTokenExpiresAt) {",
                  "        pm.collectionVariables.set('accessTokenExpiresAt', responseJson.accessTokenExpiresAt);",
                  "        console.log('Nuevo access token expiration guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    if (responseJson.refreshTokenExpiresAt) {",
                  "        pm.collectionVariables.set('refreshTokenExpiresAt', responseJson.refreshTokenExpiresAt);",
                  "        console.log('Nuevo refresh token expiration guardado autom√°ticamente');",
                  "    }",
                  "    ",
                  "    console.log('‚úÖ Refresh token exitoso - Nuevos tokens configurados autom√°ticamente');",
                  "    console.log('üîë Nuevo Access Token:', responseJson.accessToken ? 'Configurado' : 'No disponible');",
                  "    console.log('üîÑ Nuevo Refresh Token:', responseJson.refreshToken ? 'Configurado' : 'No disponible');",
                  "}"
                ]
              }
            }
          ],
          "response": [
            {
              "name": "Refresh Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/refresh",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "refresh"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"accessTokenExpiresAt\": \"2024-12-31T23:59:59.000Z\",\n  \"refreshTokenExpiresAt\": \"2025-01-31T23:59:59.000Z\",\n  \"user\": {\n    \"id\": \"user-id\",\n    \"email\": \"user@example.com\",\n    \"username\": \"username\",\n    \"name\": \"User Name\",\n    \"roles\": [\"USER\"],\n    \"permissions\": [\"READ\"]\n  }\n}"
            }
          ]
        },
        {
          "name": "Logout All Sessions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout-all",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout-all"]
            },
            "description": "Cerrar sesi√≥n del usuario en todas las sesiones activas y blacklistear todos los tokens"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Script espec√≠fico para el endpoint de logout all sessions",
                  "// Limpiar tokens y variables de sesi√≥n",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});",
                  "",
                  "pm.test('Response indicates successful logout all sessions', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('success');",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});",
                  "",
                  "// Limpiar tokens y variables de sesi√≥n autom√°ticamente",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    ",
                  "    if (responseJson.success) {",
                  "        // Limpiar tokens",
                  "        pm.collectionVariables.unset('accessToken');",
                  "        pm.collectionVariables.unset('refreshToken');",
                  "        ",
                  "        // Limpiar informaci√≥n de sesi√≥n",
                  "        pm.collectionVariables.unset('sessionId');",
                  "        pm.collectionVariables.unset('userId');",
                  "        ",
                  "        // Limpiar fechas de expiraci√≥n",
                  "        pm.collectionVariables.unset('accessTokenExpiresAt');",
                  "        pm.collectionVariables.unset('refreshTokenExpiresAt');",
                  "        ",
                  "        console.log('üóëÔ∏è Logout all sessions exitoso - Todos los tokens y variables limpiados autom√°ticamente');",
                  "        console.log('üîí Total tokens blacklisteados:', responseJson.blacklistedTokens || 0);",
                  "        console.log('‚ö†Ô∏è Todas las sesiones han sido cerradas');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "response": [
            {
              "name": "Logout All Sessions Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/logout-all",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "logout-all"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"All sessions logged out successfully\",\n  \"blacklistedTokens\": 3\n}"
            }
          ]
        },
        {
          "name": "Request Password Reset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Organization-ID",
                "value": "{{organizationId}}",
                "type": "text"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/password-reset/request",
              "host": ["{{baseUrl}}"],
              "path": ["password-reset", "request"]
            },
            "description": "Request password reset by sending OTP to user email"
          },
          "response": [
            {
              "name": "Password Reset Request Successful",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/password-reset/request",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "password-reset", "request"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"If the email exists in our system, you will receive a verification code.\",\n  \"email\": \"user@example.com\",\n  \"expiresAt\": \"2024-12-20T10:15:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Organization-ID",
                "value": "{{organizationId}}",
                "type": "text"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"otpCode\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/password-reset/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["password-reset", "verify-otp"]
            },
            "description": "Verify OTP code for password reset"
          },
          "response": [
            {
              "name": "OTP Verification Successful",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\",\n  \"otp\": \"123456\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/password-reset/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "password-reset", "verify"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"OTP verified successfully\",\n  \"email\": \"user@example.com\",\n  \"isValid\": true,\n  \"expiresAt\": \"2024-12-20T10:15:00.000Z\",\n  \"attemptsRemaining\": 3\n}"
            }
          ]
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Organization-ID",
                "value": "{{organizationId}}",
                "type": "text"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"otpCode\": \"123456\",\n  \"newPassword\": \"NewPassword123!\",\n  \"confirmPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/password-reset/reset",
              "host": ["{{baseUrl}}"],
              "path": ["password-reset", "reset"]
            },
            "description": "Reset password with verified OTP and new password"
          },
          "response": [
            {
              "name": "Password Reset Successful",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\",\n  \"otp\": \"123456\",\n  \"newPassword\": \"NewPassword123!\",\n  \"confirmPassword\": \"NewPassword123!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/password-reset/reset",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "password-reset", "reset"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Password reset successfully\",\n  \"email\": \"user@example.com\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "User Registration",
      "description": "Endpoints para registro de nuevos usuarios",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Organization-ID",
                "value": "{{organizationId}}",
                "type": "text"
              },
              {
                "key": "User-Agent",
                "value": "{{userAgent}}",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"username\": \"newuser\",\n  \"password\": \"Password123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"organizationSlug\": \"demo-org\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/register",
              "host": ["{{baseUrl}}"],
              "path": ["register"]
            },
            "description": "Registrar un nuevo usuario en el sistema"
          },
          "response": [
            {
              "name": "User Registration Successful",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"username\": \"newuser\",\n  \"password\": \"Password123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"organizationSlug\": \"demo-org\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["register"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"user-123\",\n    \"email\": \"newuser@example.com\",\n    \"username\": \"newuser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"status\": \"INACTIVE\",\n    \"orgId\": \"org-123\"\n  },\n  \"message\": \"User registered successfully. Your account requires activation by the administrator.\",\n  \"timestamp\": \"2024-12-20T10:00:00.000Z\",\n  \"requiresAdminActivation\": true\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Health Check",
      "description": "Endpoints para verificaci√≥n de salud del sistema",
      "item": [
        {
          "name": "Basic Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Verificaci√≥n b√°sica de salud del sistema"
          },
          "response": [
            {
              "name": "Health Check Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health",
                  "host": ["{{baseUrl}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-12-20T10:00:00.000Z\",\n  \"uptime\": 3600\n}"
            }
          ]
        },
        {
          "name": "Detailed Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/health/detailed",
              "host": ["{{baseUrl}}"],
              "path": ["health", "detailed"]
            },
            "description": "Verificaci√≥n detallada de salud con m√©tricas del sistema"
          },
          "response": [
            {
              "name": "Detailed Health Check Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health/detailed",
                  "host": ["{{baseUrl}}"],
                  "path": ["health", "detailed"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-12-20T10:00:00.000Z\",\n  \"uptime\": 3600,\n  \"memory\": {\n    \"used\": 512,\n    \"total\": 1024,\n    \"free\": 512\n  },\n  \"cpu\": {\n    \"usage\": 15.5\n  },\n  \"database\": {\n    \"status\": \"connected\",\n    \"responseTime\": 45\n  }\n}"
            }
          ]
        },
        {
          "name": "Full Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept-Language",
                "value": "es-ES,es;q=0.9,en;q=0.8",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/health/full",
              "host": ["{{baseUrl}}"],
              "path": ["health", "full"]
            },
            "description": "Verificaci√≥n completa de salud orquestada por el dominio"
          },
          "response": [
            {
              "name": "Full Health Check Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health/full",
                  "host": ["{{baseUrl}}"],
                  "path": ["health", "full"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-12-20T10:00:00.000Z\",\n  \"uptime\": 3600,\n  \"memory\": {\n    \"used\": 512,\n    \"total\": 1024,\n    \"free\": 512\n  },\n  \"cpu\": {\n    \"usage\": 15.5\n  },\n  \"database\": {\n    \"status\": \"connected\",\n    \"responseTime\": 45\n  },\n  \"services\": {\n    \"auth\": \"healthy\",\n    \"inventory\": \"healthy\",\n    \"reporting\": \"healthy\"\n  },\n  \"domain\": {\n    \"status\": \"operational\",\n    \"checks\": [\"business-rules\", \"workflows\", \"validations\"]\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Inventory Management",
      "description": "Endpoints para gesti√≥n de inventario (pendientes de implementaci√≥n)",
      "item": [
        {
          "name": "Products - Get All",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory/products",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "products"]
            },
            "description": "Obtener todos los productos del inventario"
          },
          "response": [
            {
              "name": "Products List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/inventory/products",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "products"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"products\": [\n    {\n      \"id\": \"product-1\",\n      \"name\": \"Laptop Dell XPS 13\",\n      \"description\": \"Laptop ultrabook de 13 pulgadas\",\n      \"sku\": \"LAP001\",\n      \"category\": \"Electr√≥nicos\",\n      \"price\": 1299.99,\n      \"cost\": 800.00,\n      \"isActive\": true,\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"limit\": 10\n}"
            }
          ]
        },
        {
          "name": "Products - Get by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "product-id",
                  "description": "ID del producto"
                }
              ]
            },
            "description": "Obtener un producto espec√≠fico por ID"
          },
          "response": [
            {
              "name": "Product Details Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/inventory/products/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "products", ":id"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"product-1\",\n  \"name\": \"Laptop Dell XPS 13\",\n  \"description\": \"Laptop ultrabook de 13 pulgadas\",\n  \"sku\": \"LAP001\",\n  \"category\": \"Electr√≥nicos\",\n  \"price\": 1299.99,\n  \"cost\": 800.00,\n  \"isActive\": true,\n  \"stock\": {\n    \"quantity\": 25,\n    \"warehouse\": \"Bodega Principal\"\n  },\n  \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n  \"updatedAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Products - Create",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Producto Ejemplo\",\n  \"description\": \"Descripci√≥n del producto\",\n  \"sku\": \"SKU001\",\n  \"category\": \"Electr√≥nicos\",\n  \"price\": 99.99,\n  \"cost\": 50.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/inventory/products",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "products"]
            },
            "description": "Crear un nuevo producto en el inventario"
          },
          "response": [
            {
              "name": "Product Created Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Producto Ejemplo\",\n  \"description\": \"Descripci√≥n del producto\",\n  \"sku\": \"SKU001\",\n  \"category\": \"Electr√≥nicos\",\n  \"price\": 99.99,\n  \"cost\": 50.00\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/inventory/products",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "products"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"product-2\",\n  \"name\": \"Producto Ejemplo\",\n  \"description\": \"Descripci√≥n del producto\",\n  \"sku\": \"SKU001\",\n  \"category\": \"Electr√≥nicos\",\n  \"price\": 99.99,\n  \"cost\": 50.00,\n  \"isActive\": true,\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Products - Update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Producto Actualizado\",\n  \"description\": \"Descripci√≥n actualizada\",\n  \"price\": 149.99,\n  \"cost\": 75.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/inventory/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "product-id",
                  "description": "ID del producto"
                }
              ]
            },
            "description": "Actualizar un producto existente"
          },
          "response": [
            {
              "name": "Product Updated Exitoso",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Producto Actualizado\",\n  \"description\": \"Descripci√≥n actualizada\",\n  \"price\": 149.99,\n  \"cost\": 75.00\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/inventory/products/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "products", ":id"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"product-1\",\n  \"name\": \"Producto Actualizado\",\n  \"description\": \"Descripci√≥n actualizada\",\n  \"sku\": \"SKU001\",\n  \"category\": \"Electr√≥nicos\",\n  \"price\": 149.99,\n  \"cost\": 75.00,\n  \"isActive\": true,\n  \"updatedAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Warehouses - Get All",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory/warehouses",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "warehouses"]
            },
            "description": "Obtener todas las bodegas"
          },
          "response": [
            {
              "name": "Warehouses List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/inventory/warehouses",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "warehouses"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"warehouses\": [\n    {\n      \"id\": \"warehouse-1\",\n      \"name\": \"Bodega Principal\",\n      \"code\": \"BOD001\",\n      \"address\": \"Calle Principal 123\",\n      \"isActive\": true,\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"total\": 1\n}"
            }
          ]
        },
        {
          "name": "Warehouses - Create",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bodega Secundaria\",\n  \"code\": \"BOD002\",\n  \"address\": \"Avenida Secundaria 456\",\n  \"description\": \"Bodega para productos de bajo volumen\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/inventory/warehouses",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "warehouses"]
            },
            "description": "Crear una nueva bodega"
          },
          "response": [
            {
              "name": "Warehouse Created Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Bodega Secundaria\",\n  \"code\": \"BOD002\",\n  \"address\": \"Avenida Secundaria 456\",\n  \"description\": \"Bodega para productos de bajo volumen\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/inventory/warehouses",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "warehouses"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"warehouse-2\",\n  \"name\": \"Bodega Secundaria\",\n  \"code\": \"BOD002\",\n  \"address\": \"Avenida Secundaria 456\",\n  \"description\": \"Bodega para productos de bajo volumen\",\n  \"isActive\": true,\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Stock - Get Current Stock",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory/stock",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "stock"]
            },
            "description": "Obtener el stock actual de todos los productos"
          },
          "response": [
            {
              "name": "Stock List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/inventory/stock",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "stock"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"stock\": [\n    {\n      \"productId\": \"product-1\",\n      \"productName\": \"Laptop Dell XPS 13\",\n      \"sku\": \"LAP001\",\n      \"warehouseId\": \"warehouse-1\",\n      \"warehouseName\": \"Bodega Principal\",\n      \"quantity\": 25,\n      \"unitCost\": 800.00,\n      \"totalValue\": 20000.00,\n      \"lastUpdated\": \"2024-12-20T10:00:00.000Z\"\n    }\n  ],\n  \"total\": 1,\n  \"totalValue\": 20000.00\n}"
            }
          ]
        },
        {
          "name": "Stock - Get Low Stock",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory/stock/low",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "stock", "low"]
            },
            "description": "Obtener productos con stock bajo"
          },
          "response": [
            {
              "name": "Low Stock List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/inventory/stock/low",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "stock", "low"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"lowStock\": [\n    {\n      \"productId\": \"product-2\",\n      \"productName\": \"Mouse Inal√°mbrico\",\n      \"sku\": \"MOU001\",\n      \"warehouseId\": \"warehouse-1\",\n      \"warehouseName\": \"Bodega Principal\",\n      \"quantity\": 3,\n      \"minQuantity\": 10,\n      \"status\": \"CRITICAL\",\n      \"lastUpdated\": \"2024-12-20T10:00:00.000Z\"\n    }\n  ],\n  \"total\": 1\n}"
            }
          ]
        },
        {
          "name": "Movements - Get All",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory/movements",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "movements"]
            },
            "description": "Obtener todos los movimientos de inventario"
          },
          "response": [
            {
              "name": "Movements List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/inventory/movements",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "movements"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"movements\": [\n    {\n      \"id\": \"movement-1\",\n      \"type\": \"IN\",\n      \"reference\": \"PO-001\",\n      \"warehouseId\": \"warehouse-1\",\n      \"warehouseName\": \"Bodega Principal\",\n      \"status\": \"POSTED\",\n      \"totalValue\": 20000.00,\n      \"createdBy\": \"user-1\",\n      \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"limit\": 10\n}"
            }
          ]
        },
        {
          "name": "Movements - Create",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"IN\",\n  \"reference\": \"PO-002\",\n  \"warehouseId\": \"warehouse-1\",\n  \"items\": [\n    {\n      \"productId\": \"product-1\",\n      \"quantity\": 10,\n      \"unitCost\": 800.00\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/inventory/movements",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "movements"]
            },
            "description": "Crear un nuevo movimiento de inventario"
          },
          "response": [
            {
              "name": "Movement Created Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"IN\",\n  \"reference\": \"PO-002\",\n  \"warehouseId\": \"warehouse-1\",\n  \"items\": [\n    {\n      \"productId\": \"product-1\",\n      \"quantity\": 10,\n      \"unitCost\": 800.00\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/inventory/movements",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "movements"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"movement-2\",\n  \"type\": \"IN\",\n  \"reference\": \"PO-002\",\n  \"warehouseId\": \"warehouse-1\",\n  \"status\": \"DRAFT\",\n  \"totalValue\": 8000.00,\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Transfers - Get All",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory/transfers",
              "host": ["{{baseUrl}}"],
              "path": ["inventory", "transfers"]
            },
            "description": "Obtener todas las transferencias entre bodegas"
          },
          "response": [
            {
              "name": "Transfers List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/inventory/transfers",
                  "host": ["{{baseUrl}}"],
                  "path": ["inventory", "transfers"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"transfers\": [\n    {\n      \"id\": \"transfer-1\",\n      \"fromWarehouseId\": \"warehouse-1\",\n      \"fromWarehouseName\": \"Bodega Principal\",\n      \"toWarehouseId\": \"warehouse-2\",\n      \"toWarehouseName\": \"Bodega Secundaria\",\n      \"status\": \"IN_TRANSIT\",\n      \"totalValue\": 5000.00,\n      \"createdBy\": \"user-1\",\n      \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n    }\n  ],\n  \"total\": 1\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Organization Management",
      "description": "Endpoints para gesti√≥n de organizaciones (pendientes de implementaci√≥n)",
      "item": [
        {
          "name": "Organization Settings - Get",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/organization/settings",
              "host": ["{{baseUrl}}"],
              "path": ["organization", "settings"]
            },
            "description": "Obtener configuraci√≥n de la organizaci√≥n"
          },
          "response": [
            {
              "name": "Organization Settings Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/organization/settings",
                  "host": ["{{baseUrl}}"],
                  "path": ["organization", "settings"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"organization\": {\n    \"id\": \"org-1\",\n    \"name\": \"Empresa Ejemplo S.A.\",\n    \"slug\": \"empresa-ejemplo\",\n    \"domain\": \"empresa-ejemplo.inventory.com\",\n    \"isActive\": true,\n    \"timezone\": \"America/Santiago\",\n    \"currency\": \"CLP\",\n    \"language\": \"es\",\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n  },\n  \"settings\": {\n  \t\"inventory\": {\n  \t\t\"allowNegativeStock\": false,\n  \t\t\"requireApprovalForMovements\": true,\n  \t\t\"defaultWarehouse\": \"warehouse-1\",\n  \t\t\"lowStockThreshold\": 10\n  \t},\n  \t\"notifications\": {\n  \t\t\"emailNotifications\": true,\n  \t\t\"lowStockAlerts\": true,\n  \t\t\"movementNotifications\": false\n  \t},\n  \t\"security\": {\n  \t\t\"sessionTimeout\": 3600,\n  \t\t\"maxLoginAttempts\": 5,\n  \t\t\"passwordExpiryDays\": 90\n  \t}\n  }"
            }
          ]
        },
        {
          "name": "Organization Settings - Update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"inventory\": {\n    \"allowNegativeStock\": true,\n    \"requireApprovalForMovements\": false,\n    \"lowStockThreshold\": 5\n  },\n  \"notifications\": {\n    \"emailNotifications\": true,\n    \"lowStockAlerts\": true,\n    \"movementNotifications\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/organization/settings",
              "host": ["{{baseUrl}}"],
              "path": ["organization", "settings"]
            },
            "description": "Actualizar configuraci√≥n de la organizaci√≥n"
          },
          "response": [
            {
              "name": "Settings Updated Exitoso",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"inventory\": {\n    \"allowNegativeStock\": true,\n    \"requireApprovalForMovements\": false,\n    \"lowStockThreshold\": 5\n  },\n  \"notifications\": {\n    \"emailNotifications\": true,\n    \"lowStockAlerts\": true,\n    \"movementNotifications\": true\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/organization/settings",
                  "host": ["{{baseUrl}}"],
                  "path": ["organization", "settings"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Organization settings updated successfully\",\n  \"updatedAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Branding - Get",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/organization/branding",
              "host": ["{{baseUrl}}"],
              "path": ["organization", "branding"]
            },
            "description": "Obtener informaci√≥n de marca de la organizaci√≥n"
          },
          "response": [
            {
              "name": "Branding Info Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/organization/branding",
                  "host": ["{{baseUrl}}"],
                  "path": ["organization", "branding"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"branding\": {\n    \"logo\": \"https://cdn.example.com/logo.png\",\n    \"favicon\": \"https://cdn.example.com/favicon.ico\",\n    \"primaryColor\": \"#2563eb\",\n    \"secondaryColor\": \"#64748b\",\n    \"companyName\": \"Empresa Ejemplo S.A.\",\n    \"tagline\": \"Soluciones de inventario inteligentes\",\n    \"contactEmail\": \"contacto@empresa-ejemplo.com\",\n    \"website\": \"https://www.empresa-ejemplo.com\"\n  },\n  \"customization\": {\n    \"enableCustomBranding\": true,\n    \"allowCustomColors\": true,\n    \"allowCustomLogo\": true\n  }"
            }
          ]
        },
        {
          "name": "Branding - Update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"primaryColor\": \"#dc2626\",\n  \"secondaryColor\": \"#1f2937\",\n  \"tagline\": \"Nueva l√≠nea de negocio\",\n  \"contactEmail\": \"nuevo@empresa-ejemplo.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/organization/branding",
              "host": ["{{baseUrl}}"],
              "path": ["organization", "branding"]
            },
            "description": "Actualizar informaci√≥n de marca de la organizaci√≥n"
          },
          "response": [
            {
              "name": "Branding Updated Exitoso",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"primaryColor\": \"#dc2626\",\n  \"secondaryColor\": \"#1f2937\",\n  \"tagline\": \"Nueva l√≠nea de negocio\",\n  \"contactEmail\": \"nuevo@empresa-ejemplo.com\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/organization/branding",
                  "host": ["{{baseUrl}}"],
                  "path": ["organization", "branding"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Branding updated successfully\",\n  \"updatedAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Multi-tenancy - Get Tenant Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/organization/tenant",
              "host": ["{{baseUrl}}"],
              "path": ["organization", "tenant"]
            },
            "description": "Obtener informaci√≥n del tenant actual"
          },
          "response": [
            {
              "name": "Tenant Info Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/organization/tenant",
                  "host": ["{{baseUrl}}"],
                  "path": ["organization", "tenant"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"tenant\": {\n    \"id\": \"tenant-1\",\n    \"name\": \"Empresa Ejemplo S.A.\",\n    \"slug\": \"empresa-ejemplo\",\n    \"domain\": \"empresa-ejemplo.inventory.com\",\n    \"subdomain\": \"empresa-ejemplo\",\n    \"isActive\": true,\n    \"plan\": \"premium\",\n    \"features\": [\"multi-warehouse\", \"advanced-reports\", \"api-access\"],\n    \"limits\": {\n      \"users\": 50,\n      \"warehouses\": 10,\n      \"products\": 10000,\n      \"apiCalls\": 1000000\n    },\n    \"usage\": {\n      \"users\": 15,\n      \"warehouses\": 3,\n      \"products\": 2500,\n      \"apiCalls\": 150000\n    },\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n    \"expiresAt\": \"2025-01-01T00:00:00.000Z\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Reporting",
      "description": "Endpoints para reportes y exportaci√≥n (pendientes de implementaci√≥n)",
      "item": [
        {
          "name": "Inventory Reports - Generate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reportType\": \"inventory-summary\",\n  \"dateRange\": {\n    \"start\": \"2024-01-01\",\n    \"end\": \"2024-12-31\"\n  },\n  \"format\": \"pdf\",\n  \"filters\": {\n    \"warehouseId\": \"warehouse-1\",\n    \"category\": \"Electr√≥nicos\",\n    \"includeInactive\": false\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reporting/inventory",
              "host": ["{{baseUrl}}"],
              "path": ["reporting", "inventory"]
            },
            "description": "Generar reporte de inventario"
          },
          "response": [
            {
              "name": "Inventory Report Generated Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reportType\": \"inventory-summary\",\n  \"dateRange\": {\n    \"start\": \"2024-01-01\",\n    \"end\": \"2024-12-31\"\n  },\n  \"format\": \"pdf\",\n  \"filters\": {\n    \"warehouseId\": \"warehouse-1\",\n    \"category\": \"Electr√≥nicos\",\n    \"includeInactive\": false\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/reporting/inventory",
                  "host": ["{{baseUrl}}"],
                  "path": ["reporting", "inventory"]
                }
              },
              "status": "Accepted",
              "code": 202,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"reportId\": \"report-123\",\n  \"status\": \"PROCESSING\",\n  \"message\": \"Report generation started\",\n  \"estimatedCompletion\": \"2024-12-20T10:05:00.000Z\",\n  \"downloadUrl\": \"{{baseUrl}}/reporting/export/report-123\",\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Financial Reports - Generate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reportType\": \"financial-summary\",\n  \"dateRange\": {\n    \"start\": \"2024-01-01\",\n    \"end\": \"2024-12-31\"\n  },\n  \"format\": \"excel\",\n  \"includeCharts\": true,\n  \"groupBy\": \"month\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reporting/financial",
              "host": ["{{baseUrl}}"],
              "path": ["reporting", "financial"]
            },
            "description": "Generar reporte financiero"
          },
          "response": [
            {
              "name": "Financial Report Generated Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reportType\": \"financial-summary\",\n  \"dateRange\": {\n    \"start\": \"2024-01-01\",\n    \"end\": \"2024-12-31\"\n  },\n  \"format\": \"excel\",\n  \"includeCharts\": true,\n  \"groupBy\": \"month\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/reporting/financial",
                  "host": ["{{baseUrl}}"],
                  "path": ["reporting", "financial"]
                }
              },
              "status": "Accepted",
              "code": 202,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"reportId\": \"report-456\",\n  \"status\": \"PROCESSING\",\n  \"message\": \"Financial report generation started\",\n  \"estimatedCompletion\": \"2024-12-20T10:08:00.000Z\",\n  \"downloadUrl\": \"{{baseUrl}}/reporting/export/report-456\",\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Movement Reports - Generate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reportType\": \"movement-summary\",\n  \"dateRange\": {\n    \"start\": \"2024-01-01\",\n    \"end\": \"2024-12-31\"\n  },\n  \"format\": \"csv\",\n  \"movementTypes\": [\"IN\", \"OUT\", \"TRANSFER\"],\n  \"warehouseId\": \"warehouse-1\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reporting/movements",
              "host": ["{{baseUrl}}"],
              "path": ["reporting", "movements"]
            },
            "description": "Generar reporte de movimientos"
          },
          "response": [
            {
              "name": "Movement Report Generated Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reportType\": \"movement-summary\",\n  \"dateRange\": {\n    \"start\": \"2024-01-01\",\n    \"end\": \"2024-12-31\"\n  },\n  \"format\": \"csv\",\n  \"movementTypes\": [\"IN\", \"OUT\", \"TRANSFER\"],\n  \"warehouseId\": \"warehouse-1\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/reporting/movements",
                  "host": ["{{baseUrl}}"],
                  "path": ["reporting", "movements"]
                }
              },
              "status": "Accepted",
              "code": 202,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"reportId\": \"report-789\",\n  \"status\": \"PROCESSING\",\n  \"message\": \"Movement report generation started\",\n  \"estimatedCompletion\": \"2024-12-20T10:03:00.000Z\",\n  \"downloadUrl\": \"{{baseUrl}}/reporting/export/report-789\",\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Reports - Get Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reporting/status/:reportId",
              "host": ["{{baseUrl}}"],
              "path": ["reporting", "status", ":reportId"],
              "variable": [
                {
                  "key": "reportId",
                  "value": "report-id",
                  "description": "ID del reporte"
                }
              ]
            },
            "description": "Obtener estado de un reporte en proceso"
          },
          "response": [
            {
              "name": "Report Status Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reporting/status/:reportId",
                  "host": ["{{baseUrl}}"],
                  "path": ["reporting", "status", ":reportId"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"reportId\": \"report-123\",\n  \"status\": \"COMPLETED\",\n  \"progress\": 100,\n  \"message\": \"Report generation completed\",\n  \"downloadUrl\": \"{{baseUrl}}/reporting/export/report-123\",\n  \"fileSize\": \"2.5MB\",\n  \"completedAt\": \"2024-12-20T10:05:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Export - Download Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reporting/export/:reportId",
              "host": ["{{baseUrl}}"],
              "path": ["reporting", "export", ":reportId"],
              "variable": [
                {
                  "key": "reportId",
                  "value": "report-id",
                  "description": "ID del reporte generado"
                }
              ]
            },
            "description": "Descargar reporte generado"
          },
          "response": [
            {
              "name": "Report Download Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reporting/export/:reportId",
                  "host": ["{{baseUrl}}"],
                  "path": ["reporting", "export", ":reportId"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/pdf"
                },
                {
                  "key": "Content-Disposition",
                  "value": "attachment; filename=\"inventory-report-2024.pdf\""
                }
              ],
              "cookie": [],
              "body": "Binary file content (PDF/Excel/CSV)"
            }
          ]
        }
      ]
    },
    {
      "name": "User Management",
      "description": "Endpoints para gesti√≥n de usuarios y roles",
      "item": [
        {
          "name": "Users - Get All",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Obtener todos los usuarios de la organizaci√≥n"
          },
          "response": [
            {
              "name": "Users List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["users"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"users\": [\n    {\n      \"id\": \"user-1\",\n      \"email\": \"user1@example.com\",\n      \"username\": \"user1\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"isActive\": true,\n      \"roles\": [\"ADMIN\"],\n      \"lastLoginAt\": \"2024-12-20T10:00:00.000Z\",\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"limit\": 10\n}"
            }
          ]
        },
        {
          "name": "Users - Get by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id",
                  "description": "ID del usuario"
                }
              ]
            },
            "description": "Obtener un usuario espec√≠fico por ID"
          },
          "response": [
            {
              "name": "User Details Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", ":id"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"user-1\",\n  \"email\": \"user1@example.com\",\n  \"username\": \"user1\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"isActive\": true,\n  \"roles\": [\"ADMIN\"],\n  \"permissions\": [\"USERS:CREATE\", \"USERS:READ\", \"USERS:UPDATE\"],\n  \"lastLoginAt\": \"2024-12-20T10:00:00.000Z\",\n  \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n  \"updatedAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Users - Create",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"username\": \"newuser\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"password\": \"password123\",\n  \"roles\": [\"USER\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Crear un nuevo usuario en la organizaci√≥n"
          },
          "response": [
            {
              "name": "User Created Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"username\": \"newuser\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"password\": \"password123\",\n  \"roles\": [\"USER\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["users"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"user-2\",\n  \"email\": \"newuser@example.com\",\n  \"username\": \"newuser\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"isActive\": true,\n  \"roles\": [\"USER\"],\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Users - Update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"isActive\": true,\n  \"roles\": [\"ADMIN\", \"SUPERVISOR\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id",
                  "description": "ID del usuario"
                }
              ]
            },
            "description": "Actualizar informaci√≥n de un usuario"
          },
          "response": [
            {
              "name": "User Updated Exitoso",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"isActive\": true,\n  \"roles\": [\"ADMIN\", \"SUPERVISOR\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", ":id"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"user-1\",\n  \"email\": \"user1@example.com\",\n  \"username\": \"user1\",\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"isActive\": true,\n  \"roles\": [\"ADMIN\", \"SUPERVISOR\"],\n  \"updatedAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Users - Change Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isActive\": false,\n  \"reason\": \"User requested deactivation\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:id/status",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id",
                  "description": "ID del usuario"
                }
              ]
            },
            "description": "Cambiar el estado de un usuario (activar/desactivar)"
          },
          "response": [
            {
              "name": "User Status Changed Exitoso",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"isActive\": false,\n  \"reason\": \"User requested deactivation\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/:id/status",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", ":id", "status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"User status updated successfully\",\n  \"user\": {\n    \"id\": \"user-1\",\n    \"isActive\": false,\n    \"updatedAt\": \"2024-12-20T10:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Roles - Get All",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/roles",
              "host": ["{{baseUrl}}"],
              "path": ["roles"]
            },
            "description": "Obtener todos los roles de la organizaci√≥n"
          },
          "response": [
            {
              "name": "Roles List Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/roles",
                  "host": ["{{baseUrl}}"],
                  "path": ["roles"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"roles\": [\n    {\n      \"id\": \"role-1\",\n      \"name\": \"ADMIN\",\n      \"description\": \"Administrador del sistema\",\n      \"isActive\": true,\n      \"permissions\": [\"USERS:CREATE\", \"USERS:READ\", \"USERS:UPDATE\", \"USERS:DELETE\"],\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    },\n    {\n      \"id\": \"role-2\",\n      \"name\": \"USER\",\n      \"description\": \"Usuario est√°ndar\",\n      \"isActive\": true,\n      \"permissions\": [\"USERS:READ_OWN\", \"USERS:UPDATE_OWN\"],\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"total\": 2\n}"
            }
          ]
        },
        {
          "name": "Roles - Create",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"SUPERVISOR\",\n  \"description\": \"Supervisor de inventario\",\n  \"permissions\": [\"PRODUCTS:CREATE\", \"PRODUCTS:READ\", \"PRODUCTS:UPDATE\", \"MOVEMENTS:CREATE\", \"MOVEMENTS:READ\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/roles",
              "host": ["{{baseUrl}}"],
              "path": ["roles"]
            },
            "description": "Crear un nuevo rol en la organizaci√≥n"
          },
          "response": [
            {
              "name": "Role Created Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"SUPERVISOR\",\n  \"description\": \"Supervisor de inventario\",\n  \"permissions\": [\"PRODUCTS:CREATE\", \"PRODUCTS:READ\", \"PRODUCTS:UPDATE\", \"MOVEMENTS:CREATE\", \"MOVEMENTS:READ\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/roles",
                  "host": ["{{baseUrl}}"],
                  "path": ["roles"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"role-3\",\n  \"name\": \"SUPERVISOR\",\n  \"description\": \"Supervisor de inventario\",\n  \"isActive\": true,\n  \"permissions\": [\"PRODUCTS:CREATE\", \"PRODUCTS:READ\", \"PRODUCTS:UPDATE\", \"MOVEMENTS:CREATE\", \"MOVEMENTS:READ\"],\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Bulk Imports",
      "description": "Endpoints para importaci√≥n masiva de datos (pendientes de implementaci√≥n)",
      "item": [
        {
          "name": "Import Products",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "type",
                  "value": "products",
                  "type": "text"
                },
                {
                  "key": "options",
                  "value": "{\"skipDuplicates\": true, \"updateExisting\": false}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/imports/products",
              "host": ["{{baseUrl}}"],
              "path": ["imports", "products"]
            },
            "description": "Importar productos masivamente desde archivo"
          },
          "response": [
            {
              "name": "Products Import Started Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    },
                    {
                      "key": "type",
                      "value": "products",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/imports/products",
                  "host": ["{{baseUrl}}"],
                  "path": ["imports", "products"]
                }
              },
              "status": "Accepted",
              "code": 202,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"importId\": \"import-123\",\n  \"type\": \"products\",\n  \"status\": \"VALIDATING\",\n  \"message\": \"File uploaded successfully, validation in progress\",\n  \"fileName\": \"products-import.xlsx\",\n  \"fileSize\": \"1.2MB\",\n  \"totalRows\": 150,\n  \"estimatedCompletion\": \"2024-12-20T10:10:00.000Z\",\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Import Stock",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "type",
                  "value": "stock",
                  "type": "text"
                },
                {
                  "key": "warehouseId",
                  "value": "warehouse-1",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/imports/stock",
              "host": ["{{baseUrl}}"],
              "path": ["imports", "stock"]
            },
            "description": "Importar stock masivamente desde archivo"
          },
          "response": [
            {
              "name": "Stock Import Started Exitoso",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    },
                    {
                      "key": "type",
                      "value": "stock",
                      "type": "text"
                    },
                    {
                      "key": "warehouseId",
                      "value": "warehouse-1",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/imports/stock",
                  "host": ["{{baseUrl}}"],
                  "path": ["imports", "stock"]
                }
              },
              "status": "Accepted",
              "code": 202,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"importId\": \"import-456\",\n  \"type\": \"stock\",\n  \"status\": \"VALIDATING\",\n  \"message\": \"Stock import validation in progress\",\n  \"fileName\": \"stock-update.xlsx\",\n  \"fileSize\": \"856KB\",\n  \"totalRows\": 75,\n  \"warehouseId\": \"warehouse-1\",\n  \"estimatedCompletion\": \"2024-12-20T10:08:00.000Z\",\n  \"createdAt\": \"2024-12-20T10:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Get Import Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/imports/status/:importId",
              "host": ["{{baseUrl}}"],
              "path": ["imports", "status", ":importId"],
              "variable": [
                {
                  "key": "importId",
                  "value": "import-id",
                  "description": "ID de la importaci√≥n"
                }
              ]
            },
            "description": "Obtener estado de una importaci√≥n"
          },
          "response": [
            {
              "name": "Import Status Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/imports/status/:importId",
                  "host": ["{{baseUrl}}"],
                  "path": ["imports", "status", ":importId"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"importId\": \"import-123\",\n  \"type\": \"products\",\n  \"status\": \"COMPLETED\",\n  \"progress\": 100,\n  \"message\": \"Import completed successfully\",\n  \"summary\": {\n    \"totalRows\": 150,\n    \"processedRows\": 150,\n    \"successfulRows\": 145,\n    \"failedRows\": 5,\n    \"skippedRows\": 0\n  },\n  \"errors\": [\n    {\n      \"row\": 23,\n      \"field\": \"sku\",\n      \"message\": \"SKU already exists\",\n      \"value\": \"SKU001\"\n    },\n    {\n      \"row\": 45,\n      \"field\": \"price\",\n      \"message\": \"Invalid price format\",\n      \"value\": \"abc\"\n    }\n  ],\n  \"completedAt\": \"2024-12-20T10:10:00.000Z\",\n  \"downloadUrl\": \"{{baseUrl}}/imports/download/import-123\"\n}"
            }
          ]
        },
        {
          "name": "Download Import Results",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/imports/download/:importId",
              "host": ["{{baseUrl}}"],
              "path": ["imports", "download", ":importId"],
              "variable": [
                {
                  "key": "importId",
                  "value": "import-id",
                  "description": "ID de la importaci√≥n"
                }
              ]
            },
            "description": "Descargar resultados de la importaci√≥n"
          },
          "response": [
            {
              "name": "Import Results Download Exitoso",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/imports/download/:importId",
                  "host": ["{{baseUrl}}"],
                  "path": ["imports", "download", ":importId"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                },
                {
                  "key": "Content-Disposition",
                  "value": "attachment; filename=\"import-results-import-123.xlsx\""
                }
              ],
              "cookie": [],
              "body": "Binary file content (Excel file with import results)"
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script de pre-request para configuraciones autom√°ticas",
          "",
          "// Generar request ID √∫nico si no existe",
          "if (!pm.collectionVariables.get('requestId')) {",
          "    pm.collectionVariables.set('requestId', pm.variables.replaceIn('{{$guid}}'));",
          "}",
          "",
          "// Verificar si el access token est√° pr√≥ximo a expirar",
          "const accessTokenExpiresAt = pm.collectionVariables.get('accessTokenExpiresAt');",
          "if (accessTokenExpiresAt) {",
          "    const expiresAt = new Date(accessTokenExpiresAt);",
          "    const now = new Date();",
          "    const timeUntilExpiry = expiresAt.getTime() - now.getTime();",
          "    ",
          "    // Si expira en menos de 5 minutos, mostrar advertencia",
          "    if (timeUntilExpiry < 5 * 60 * 1000 && timeUntilExpiry > 0) {",
          "        console.warn('‚ö†Ô∏è Access token expira en menos de 5 minutos');",
          "        console.warn('Considera usar el endpoint de refresh token');",
          "    }",
          "}",
          "",
          "// Log de informaci√≥n de la request",
          "console.log('üöÄ Ejecutando:', pm.request.method, pm.request.url.getPath());",
          "console.log('üìù Request ID:', pm.collectionVariables.get('requestId'));"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script global de test para validaciones autom√°ticas",
          "// Solo ejecutar si no hay un script espec√≠fico para el endpoint",
          "",
          "// Validar que la respuesta sea JSON",
          "pm.test('Response is JSON', function () {",
          "    pm.response.to.be.json;",
          "});",
          "",
          "// Validar tiempo de respuesta",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Validar que la respuesta tenga estructura v√°lida",
          "pm.test('Response has valid structure', function () {",
          "    const responseJson = pm.response.json();",
          "    pm.expect(responseJson).to.be.an('object');",
          "});",
          "",
          "// Log de informaci√≥n √∫til para debugging",
          "console.log('Endpoint:', pm.request.url.getPath());",
          "console.log('Method:', pm.request.method);",
          "console.log('Status:', pm.response.status);",
          "console.log('Response Time:', pm.response.responseTime + 'ms');"
        ]
      }
    }
  ]
}
